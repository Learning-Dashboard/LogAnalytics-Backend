openapi: 3.0.3
info:
  title: Swagger Log Analytics Tool - OpenAPI 3.0
  description: This is the REST API documentation for the TFG Log Analytics Tool for the Learning Dashboard, by Laura Cazorla Garc√©s.
  version: 1.0.0
servers:
  - url: http://localhost:8080/api
  - url: http://localhost:8888/api
paths:
  /subjects:
    get:
      tags:
        - Subject
      summary: Finds all of the Subjects
      description: Retrieves all of the existing Subjects.
      operationId: getSubjects
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subject'
  /teams:
    get:
      tags:
        - Team
      summary: Finds all of the Teams
      description: Retrieves all of the existing Teams.
      operationId: getTeams
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
  /teams/import:
    get:
      tags:
        - Team
      summary: Stores the Teams from the LD
      description: Stores all of the Teams present in the current Learning Dashboard configuration, along with their corresponding subject.
      operationId: importTeams
      responses:
        '201':
          description: created
  /sessions:
    get:
      tags:
        - Session
      summary: Finds all of the Sessions
      description: Retrieves all of the existing Sessions.
      operationId: getSessions
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SessionDTO'
  /logs:
    get:
      tags:
        - Log
      summary: Finds the filtered Logs
      description: Retrieves all of the existing Logs, filtering by the provided parameters.
      operationId: getLogs
      parameters:
        - name: page
          in: query
          required: false
          description: Page number of the Logs to be retrieved.
          schema:
            type: integer
            minimum: 1
            example: 1
            format: int32
        - name: size
          in: query
          required: false
          description: Size of the page.
          schema:
            type: integer
            minimum: 1
            example: 15
            format: int32
        - name: dateBefore
          in: query
          description: Starting date.
          required: false
          schema:
            type: string
            format: date
            example: 2023-01-01
        - name: dateAfter
          in: query
          description: Ending date.
          required: false
          schema:
            type: string
            format: date
            example: 2023-06-01
        - name: team
          in: query
          description: Name of the Team to retrieve the Logs from.
          required: false
          schema:
            type: string
            example: pes11a
        - name: subject
          in: query
          description: Name of the Subject to retrieve the Logs from.
          required: false
          schema:
            type: string
            example: PES
        - name: keyword
          in: query
          description: Keyword which we want the Logs retrieved to contain.
          required: false
          schema:
            type: string
            example: Strategic
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Log'
        '400':
          description: bad request
          content:
            application/json:
              schema: 
                type: string
              examples: 
                  example 1: 
                    value: Cannot filter by team and subject simultaneously
                  example 2: 
                    value: Size needed for pagination
                  example 3:
                    value: Page needed for pagination
                  example 4:
                    value: dateBefore is not previous to dateAfter
                  example 5:
                    value: Date formats are incorrect
                  example 6:
                    value: Page value must be greater than 0
                  example 7:
                    value: Size value must be greater than 0
  /logs/import:
    post:
      tags:
        - Log
      summary: Stores the Logs in the Log file
      description: Stores the Logs present in the Log file, if the data is correct and they have not been stored before, and creates the corresponding Internal Metrics if necessary.
      operationId: importLogs
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '201':
          description: created
        '413':
          description: payload too large
          content:
            application/json:
              schema: 
                type: string
              example: 
                value: The file is bigger than 20MB
  /metricAccesses:
    get:
      tags:
        - Log
      summary: Finds all of the MetricAccesses
      description: Retrieves all of the existing Logs which are MetricAccesses.
      operationId: getMetricAccesses
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetricAccess'
  /factorAccesses:
    get:
      tags:
        - Log
      summary: Finds all of the FactorAccesses
      description: Retrieves all of the existing Logs which are FactorAccesses.
      operationId: getFactorAccesses
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FactorAccess'
  /indicatorAccesses:
    get:
      tags:
        - Log
      summary: Finds all of the IndicatorAccesses
      description: Retrieves all of the existing Logs which are IndicatorAccesses.
      operationId: getIndicatorAccesses
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IndicatorAccess'
  /qModelAccesses:
    get:
      tags:
        - Log
      summary: Finds all of the QModelAccesses
      description: Retrieves all of the existing Logs which are QModelAccesses.
      operationId: getQModelAccesses
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QModelAccess'
  /metrics:
    get:
      tags:
        - Metric
      summary: Finds all of the Metrics
      description: Retrieves all of the existing Metrics.
      operationId: getMetrics
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Metric'
  /metrics/import:
    get:
      tags:
        - Metric
      summary: Stores the Metrics from the LD
      description: Stores all of the Metrics present in the current Learning Dashboard configuration, and creates the corresponding Internal Metrics if necessary.
      operationId: importMetrics
      responses:
        '201':
          description: created
  /factors:
    get:
      tags:
        - Factor
      summary: Finds all of the Factors
      description: Retrieves all of the existing Factors.
      operationId: getFactors
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Factor'
  /factors/import:
    get:
      tags:
        - Factor
      summary: Stores the Factors from the LD
      description: Stores all of the Factors present in the current Learning Dashboard configuration, and creates the corresponding Internal Metrics if necessary.
      operationId: importFactors
      responses:
        '201':
          description: created
  /indicators:
    get:
      tags:
        - Indicator
      summary: Finds all of the Indicators
      description: Retrieves all of the existing Indicators.
      operationId: getIndicators
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Indicator'
  /indicators/import:
    get:
      tags:
        - Indicator
      summary: Stores the Indicators from the LD
      description: Stores all od the Indicators present in the current Learning Dashboard configuration, and creates the corresponding Internal Metrics if necessary.
      operationId: importIndicators
      responses:
        '201':
          description: created
  /categories:
    get:
      tags:
        - Category
      summary: Finds all of the Categories
      description: Retrieves all of the existing Categories.
      operationId: getCategories
      responses:
        '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Category'
  /internalMetrics:
    get:
      tags:
        - InternalMetric
      summary: Finds all of the Internal Metrics
      description: Retrieves all of the existing Internal Metrics.
      operationId: getInternalMetrics
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InternalMetric'
  /evaluations/update:
    get:
      tags:
        - Evaluation
      summary: Updates the Evaluations
      description: Performs and stores the Evaluations for all of the Internal Metrics using the current data. It stores evaluations using Team, Subject and general granularity.
      operationId: updateEvaluations
      responses:
        '201':
          description: created
  /evaluations/current:
    get:
      tags:
        - Evaluation
      summary: Finds the current Evaluations
      description: Retrieves all of the Evaluations from the last evaluation date.
      operationId: getCurrentEvaluations
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EvaluationDTO'
  /evaluations/historical:
    get:
      tags:
        - Evaluation
      summary: Finds historical Evaluations
      description: Retrieves all of the Evaluations that are included in a certain time range.
      operationId: getHistoricalEvaluations
      parameters:
        - name: dateBefore
          in: query
          description: Starting date.
          required: true
          schema:
            type: string
            format: date
            example: 2023-01-01
        - name: dateAfter
          in: query
          description: Ending date.
          required: true
          schema:
            type: string
            format: date
            example: 2023-06-01
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EvaluationDTO'
        '400':
          description: bad request
          content:
            application/json:
              schema: 
                type: string
              examples:
                  example 1:
                    value: dateBefore is not previous to dateAfter
                  example 2:
                    value: Date formats are incorrect
                  example 3:
                    value: Required parameter 'dateBefore' is not present
  /evaluations/historical/{metric}/{param}:
    get:
      tags:
        - Evaluation
      summary: Finds historical Evaluations of a certain Internal Metric
      description: Retrieves all of the Evaluations that are included in a certain time range for the specified Internal Metric.
      operationId: getHistoricalEvaluationsByParam
      parameters:
        - name: metric
          in: path
          description: Controller name of the metric.
          required: true
          schema:
            type: string
            example: Metric accesses
        - name: param
          in: path
          description: Parameter name of the metric.
          required: true
          schema:
            type: string
            example: Tasks
        - name: dateBefore
          in: query
          description: Starting date.
          required: true
          schema:
            type: string
            format: date
            example: 2023-01-01
        - name: dateAfter
          in: query
          description: Ending date.
          required: true
          schema:
            type: string
            format: date
            example: 2023-06-01
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluationDTOByParam'
        '400':
          description: bad request
          content:
            application/json:
              schema: 
                type: string
              examples:
                  example 1:
                    value: dateBefore is not previous to dateAfter
                  example 2:
                    value: Date formats are incorrect
                  example 3:
                    value: Required parameter 'dateBefore' is not present
  /teamEvaluations/current:
    get:
      tags:
        - TeamEvaluation
      summary: Finds the current TeamEvaluations
      description: Retrieves all of the TeamEvaluations from the last evaluation date.
      operationId: getCurrentTeamEvaluations
      parameters:
        - name: team
          in: query
          description: Identifier of the team
          required: true
          schema:
            type: string
            example: asw11b
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EvaluationDTO'
  /teamEvaluations/historical:
    get:
      tags:
        - TeamEvaluation
      summary: Finds historical TeamEvaluations
      description: Retrieves all of the TeamEvaluations that are included in a certain time range.
      operationId: getHistoricalTeamEvaluations
      parameters:
        - name: team
          in: query
          description: Identifier of the team
          required: true
          schema:
            type: string
            example: asw11b
        - name: dateBefore
          in: query
          description: Starting date.
          required: true
          schema:
            type: string
            format: date
            example: 2023-01-01
        - name: dateAfter
          in: query
          description: Ending date.
          required: true
          schema:
            type: string
            format: date
            example: 2023-06-01
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EvaluationDTO'
        '400':
          description: bad request
          content:
            application/json:
              schema: 
                type: string
              examples:
                  example 1:
                    value: dateBefore is not previous to dateAfter
                  example 2:
                    value: Date formats are incorrect
                  example 3:
                    value: Required parameter 'dateBefore' is not present
  /teamEvaluations/historical/{metric}/{param}:
    get:
      tags:
        - TeamEvaluation
      summary: Finds historical TeamEvaluations of a certain Internal Metric
      description: Retrieves all of the TeamEvaluations that are included in a certain time range for the specified Internal Metric.
      operationId: getHistoricalTeamEvaluationsByParam
      parameters:
        - name: metric
          in: path
          description: Controller name of the metric.
          required: true
          schema:
            type: string
            example: Metric accesses
        - name: param
          in: path
          description: Parameter name of the metric.
          required: true
          schema:
            type: string
            example: Tasks
        - name: team
          in: query
          description: Identifier of the team
          required: true
          schema:
            type: string
            example: asw11b
        - name: dateBefore
          in: query
          description: Starting date.
          required: true
          schema:
            type: string
            format: date
            example: 2023-01-01
        - name: dateAfter
          in: query
          description: Ending date.
          required: true
          schema:
            type: string
            format: date
            example: 2023-06-01
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluationDTOByParam'
        '400':
          description: bad request
          content:
            application/json:
              schema: 
                type: string
              examples:
                  example 1:
                    value: dateBefore is not previous to dateAfter
                  example 2:
                    value: Date formats are incorrect
                  example 3:
                    value: Required parameter 'dateBefore' is not present
  /subjectEvaluations/current:
    get:
      tags:
        - SubjectEvaluation
      summary: Finds the current SubjectEvaluations
      description: Retrieves all of the SubjectEvaluations from the last evaluation date.
      operationId: getCurrentSubjectEvaluations
      parameters:
        - name: subject
          in: query
          description: Identifier of the subject
          required: true
          schema:
            type: string
            example: ASW
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EvaluationDTO'
  /subjectEvaluations/historical:
    get:
      tags:
        - SubjectEvaluation
      summary: Finds historical SubjectEvaluations
      description: Retrieves all of the SubjectEvaluations that are included in a certain time range.
      operationId: getHistoricalSubjectEvaluations
      parameters:
        - name: subject
          in: query
          description: Identifier of the subject
          required: true
          schema:
            type: string
            example: ASW
        - name: dateBefore
          in: query
          description: Starting date.
          required: true
          schema:
            type: string
            format: date
            example: 2023-01-01
        - name: dateAfter
          in: query
          description: Ending date.
          required: true
          schema:
            type: string
            format: date
            example: 2023-06-01
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EvaluationDTO'
        '400':
          description: bad request
          content:
            application/json:
              schema: 
                type: string
              examples:
                  example 1:
                    value: dateBefore is not previous to dateAfter
                  example 2:
                    value: Date formats are incorrect
                  example 3:
                    value: Required parameter 'dateBefore' is not present
  /subjectEvaluations/historical/{metric}/{param}:
    get:
      tags:
        - SubjectEvaluation
      summary: Finds historical SubjectEvaluations of a certain Internal Metric
      description: Retrieves all of the SubjectEvaluations that are included in a certain time range for the specified Internal Metric.
      operationId: getHistoricalSubjectEvaluationsByParam
      parameters:
        - name: metric
          in: path
          description: Controller name of the metric.
          required: true
          schema:
            type: string
            example: Metric accesses
        - name: param
          in: path
          description: Parameter name of the metric.
          required: true
          schema:
            type: string
            example: Tasks
        - name: subject
          in: query
          description: Identifier of the subject
          required: true
          schema:
            type: string
            example: ASW
        - name: dateBefore
          in: query
          description: Starting date.
          required: true
          schema:
            type: string
            format: date
            example: 2023-01-01
        - name: dateAfter
          in: query
          description: Ending date.
          required: true
          schema:
            type: string
            format: date
            example: 2023-06-01
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluationDTOByParam'
        '400':
          description: bad request
          content:
            application/json:
              schema: 
                type: string
              examples:
                  example 1:
                    value: dateBefore is not previous to dateAfter
                  example 2:
                    value: Date formats are incorrect
                  example 3:
                    value: Required parameter 'dateBefore' is not present
components:
  schemas:
    Subject:
      type: object
      properties:
        acronym:
          type: string
          example: PES
    Team:
      type: object
      properties:
        id:
          type: string
          example: pes11a
        semester:
          type: string
          example: 22-23-Q1
        subject:
          $ref: '#/components/schemas/Subject'
    SessionDTO:
      type: object
      properties:
        id:
          type: string
          example: eyJhbGciOiJIUzUxMiJ9
        start_timestamp:
          type: integer
          format: int64
          example: 1680979195000
        end_timestamp:
          type: integer
          format: int64
          example: 1680982795000
          nullable: true
        team:
          $ref: '#/components/schemas/Team'
        duration:
          type: number
          format: double
          example: 3600
          nullable: true
        nInteractions:
          type: integer
          format: int32
          example: 25
          nullable: true
    Session:
      type: object
      properties:
        id:
          type: string
          example: eyJhbGciOiJIUzUxMiJ9
        start_timestamp:
          type: integer
          format: int64
          example: 1680979195000
        end_timestamp:
          type: integer
          format: int64
          example: 1680982795000
          nullable: true
        duration:
          type: number
          format: double
          example: 3600
          nullable: true
        nInteractions:
          type: integer
          format: int32
          example: 25
          nullable: true
    Log:
      type: object
      properties:
        time:
          type: integer
          format: int64
          example: 1680979195000
        session:
          $ref: '#/components/schemas/Session'
        team:
          type: string
          example: pes11a
        message:
          type: string
          example: 2023-04-06 18:27:13.967, 
            GET "/Metrics/CurrentTable", 
            parameters={}, Action performed by pes11a
        page:
          type: string
          example: Metrics
          nullable: true
    MetricAccess:
      allOf:
        - $ref: '#/components/schemas/Log'
        - type: object
          properties:
            historic:
              type: boolean
              example: true
            viewFormat:
              type: string
              example: Table
    FactorAccess:
      allOf:
        - $ref: '#/components/schemas/Log'
        - type: object
          properties:
            historic:
              type: boolean
              example: true
            viewFormat:
              type: string
              example: Table
    IndicatorAccess:
      allOf:
        - $ref: '#/components/schemas/Log'
        - type: object
          properties:
            historic:
              type: boolean
              example: true
            viewFormat:
              type: string
              example: Table
    QModelAccess:
      allOf:
        - $ref: '#/components/schemas/Log'
        - type: object
          properties:
            viewFormat:
              type: string
              example: Graph
    Metric:
      type: object
      properties:
        id:
          type: string
          example: commits_laura_cazorla
        name:
          type: string
          example: laura.cazorla commits
        noUserId:
          type: string
          example: commits
          nullable: true
        noUserName:
          type: string
          example: Commits
          nullable: true
    Factor:
      type: object
      properties:
        id:
          type: string
          example: commitsmanagement
        name:
          type: string
          example: Commits Management
    Indicator:
      type: object
      properties:
        id:
          type: string
          example: repositorycontribution
        name:
          type: string
          example: Repository Contribution
    Category:
      type: object
      properties:
        id:
          type: string
          example: Other kinds of accesses
    InternalMetric:
      type: object
      properties:
        id:
          type: string
          example: unassignedtasksFactorAccesses
        name:
          type: string
          example: Unassigned Tasks factor accesses
        param:
          type: string
          example: unassignedtasks
          nullable: true
        paramName:
          type: string
          example: Unassigned Tasks
          nullable: true
        controller:
          type: string
          example: FactorAccesses
          nullable: true
        controllerName:
          type: string
          example: Factor accesses
          nullable: true
        teams:
          type: array
          items:
            type: string
            example: pes11a, asw11b
          nullable: true
        category:
          $ref: '#/components/schemas/Category'
    Entities: 
      type: object
      properties:
        Information Completeness:
          type: number
          format: double
          example: 20.0
        Backlog Management:
          type: number
          format: double
          example: 25.0
        Repository Contribution:
          type: number
          format: double
          example: 5.0
    EntitiesByParam: 
        type: object
        properties:
          2023-05-18:
            type: number
            format: double
            example: 20.0
          2023-05-19:
            type: number
            format: double
            example: 25.0
          2023-05-20:
            type: number
            format: double
            example: 5.0
    EvaluationDTO:
      type: object
      properties:
        name:
          type: string
          example: Indicator accesses
        subject:
          type: string
          example: null
          nullable: true
        team:
          type: string
          example: null
          nullable: true
        date:
          type: string
          format: date
          example: 2022-05-14
        value:
          type: number
          format: double
          example: 0.0
        groupable:
          type: boolean
          example: true
        category:
          type: string
          example: Indicator Accesses
        entities:
          $ref: '#/components/schemas/Entities'
    EvaluationDTOByParam:
      type: object
      properties:
        name:
          type: string
          example: Indicator accesses
        subject:
          type: string
          example: null
          nullable: true
        team:
          type: string
          example: null
          nullable: true
        date:
          type: string
          format: date
          example: 2022-05-14
        value:
          type: number
          format: double
          example: 0.0
        groupable:
          type: boolean
          example: true
        category:
          type: string
          example: Indicator Accesses
        entities:
          $ref: '#/components/schemas/EntitiesByParam'
      
